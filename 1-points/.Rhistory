add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines
opq(bbox = glue("{regions$county[i]}")) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf()
i=1
message(glue("Downloading {regions$county[i]}"))
temp_data <- opq(bbox = glue("{regions$county[i]}")) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf()
temp_data
temp_data$osm_lines
i=1
temp_data <- opq(bbox = glue("{regions$county[i]}")) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
select(name, geometry) %>%
filter(grepl('north|south',name))
temp_data <- opq(bbox = glue("{regions$county[i]}")) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines %>%
select(name, geometry) %>%
filter(grepl('north|south',name))
temp_data
nrow(temp_data)
opq(bbox = glue("{regions$county[i]}")) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines
library(osmdata)
library(sf)
library(tidyverse)
library(glue)
regions <- read.csv('https://gist.githubusercontent.com/radiac/d91d2ed1b971c03d49e9b7bd85e23f1c/raw/1e51ebb467b809ea8dcf1d7d429581e95ac48e3d/uk-counties-to-regions.csv') %>%
rename_all(tolower)
#for (i in 1:nrow(regions)) {
for (i in 1:10) {
message(glue("Downloading {regions$county[i]}"))
temp_data <- opq(bbox = glue("{regions$county[i]}")) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines %>%
select(name, geometry) %>%
filter(grepl('north|south',name))
if (nrow(temp_data) > 1) {
if (i == 1) {result <- temp_data} else { result <- bind_rows(result, temp_data) }
}
}
i
i=2
message(glue("Downloading {regions$county[i]}"))
temp_data <- opq(bbox = glue("{regions$county[i]}")) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines %>%
select(name, geometry) %>%
filter(grepl('north|south',name))
opq(bbox = glue("{regions$county[i]}")) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf()
opq(bbox = glue("{regions$county[i]}")) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines
opq(bbox = glue("{regions$county[i]}")) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines %>%
add_column(!!!cols[setdiff(names(cols), names(.))])
opq(bbox = glue("{regions$county[i]}")) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines %>%
add_column(!!!.[setdiff(names(.), names(.))])
names(temp_data)
i
i=1
temp_data <- opq(bbox = glue("{regions$county[i]}")) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines
temp_data
i=3
temp_data <- opq(bbox = glue("{regions$county[i]}")) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines
temp_data
i=2
temp_data <- opq(bbox = glue("{regions$county[i]}")) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines
temp_data
names(temp_data)
add_column(temp_data, 'sdfs')
add_column(temp_data, sdfsf)
add_column(temp_data, 'sdfsf')
mutate(temp_data, test = NA)
library(osmdata)
library(sf)
library(tidyverse)
library(glue)
regions <- read.csv('https://gist.githubusercontent.com/radiac/d91d2ed1b971c03d49e9b7bd85e23f1c/raw/1e51ebb467b809ea8dcf1d7d429581e95ac48e3d/uk-counties-to-regions.csv') %>%
rename_all(tolower)
#for (i in 1:nrow(regions)) {
for (i in 1:10) {
message(glue("Downloading {regions$county[i]}"))
temp_data <- opq(bbox = glue("{regions$county[i]}")) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines
if ('name' %in% names(temp_data)) {} else {temp_data <- mutate(temp_data, name = NA)}
temp_data <- temp_data %>%
select(name, geometry) %>%
filter(grepl('north|south',name))
if (nrow(temp_data) > 1) {
if (i == 1) {result <- temp_data} else { result <- bind_rows(result, temp_data) }
}
}
result
st_centroid(result$geometry)
library(osmdata)
library(sf)
library(tidyverse)
library(glue)
regions <- read.csv('https://gist.githubusercontent.com/radiac/d91d2ed1b971c03d49e9b7bd85e23f1c/raw/1e51ebb467b809ea8dcf1d7d429581e95ac48e3d/uk-counties-to-regions.csv') %>%
rename_all(tolower)
for (i in 1:nrow(regions)) {
message(glue("Downloading {regions$county[i]}"))
temp_data <- opq(bbox = glue("{regions$county[i]}")) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines
if ('name' %in% names(temp_data)) {} else {temp_data <- mutate(temp_data, name = NA)}
temp_data <- temp_data %>%
select(name, geometry) %>%
filter(grepl('north|south',name))
if (nrow(temp_data) > 1) {
temp_data$geometry <- st_centroid(temp_data$geometry)
if (i == 1) {result <- temp_data} else { result <- bind_rows(result, temp_data) }
}
}
ggplot() + geom_sf(data = result)
library(rnaturalearth)
rnaturalearth::countries110
rnaturalearth::countries110$sovereignt
filter(rnaturalearth::countries110, sovereignt == 'UNited Kingdom')
ne_countries(country = 'france')
ne_countries(country = 'united kingdom')
ne_countries(country = 'united kingdom', returnclass = 'sf')
ne_countries(country = 'united kingdom', returnclass = 'sf') %>% ggplot() + geom_sf()
rough_uk <- ne_countries(country = 'united kingdom', returnclass = 'sf')
uk_grid <- st_make_grid(rough_uk,
cellsize = c(diff(st_bbox(rough_uk)[c(1, 3)]), diff(st_bbox(rough_uk)[c(2, 4)]))/c(50,50),
offset = st_bbox(rough_uk)[c("xmin", "ymin")],
n = c(50, 50),
crs = 4326,
what = "polygons",
square = FALSE,
flat_topped = FALSE) %>% st_sf() %>% mutate(id = 1:nrow(.))
ggplot() + geom_sf(uk_grid)
ggplot() + geom_sf(data=uk_grid)
uk_grid <- st_make_grid(rough_uk,
cellsize = c(diff(st_bbox(rough_uk)[c(1, 3)]), diff(st_bbox(rough_uk)[c(2, 4)]))/c(50,50),
offset = st_bbox(rough_uk)[c("xmin", "ymin")],
n = c(50, 50),
crs = 4326,
what = "squares",
square = FALSE,
flat_topped = FALSE) %>% st_sf() %>% mutate(id = 1:nrow(.))
ggplot() + geom_sf(data=uk_grid)
uk_grid <- st_make_grid(rough_uk,
cellsize = c(diff(st_bbox(rough_uk)[c(1, 3)]), diff(st_bbox(rough_uk)[c(2, 4)]))/c(50,50),
offset = st_bbox(rough_uk)[c("xmin", "ymin")],
n = c(50, 50),
crs = 4326,
what = "polygons",
square = FALSE,
flat_topped = FALSE) %>% st_sf() %>% mutate(id = 1:nrow(.))
ggplot() + geom_sf(data=uk_grid)
uk_grid <- st_make_grid(rough_uk,
cellsize = c(diff(st_bbox(rough_uk)[c(1, 3)]), diff(st_bbox(rough_uk)[c(2, 4)]))/c(50,50),
offset = st_bbox(rough_uk)[c("xmin", "ymin")],
n = c(50, 50),
crs = 4326,
what = "polygons",
square = TRUE,
flat_topped = FALSE) %>% st_sf() %>% mutate(id = 1:nrow(.))
ggplot() + geom_sf(data=uk_grid)
i=1
uk_grid[i,]
library(osmdata)
library(sf)
library(tidyverse)
library(glue)
library(rnaturalearth)
regions <- read.csv('https://gist.githubusercontent.com/radiac/d91d2ed1b971c03d49e9b7bd85e23f1c/raw/1e51ebb467b809ea8dcf1d7d429581e95ac48e3d/uk-counties-to-regions.csv') %>%
rename_all(tolower)
rough_uk <- ne_countries(country = 'united kingdom', returnclass = 'sf')
uk_grid <- st_make_grid(rough_uk,
cellsize = c(diff(st_bbox(rough_uk)[c(1, 3)]), diff(st_bbox(rough_uk)[c(2, 4)]))/c(50,50),
offset = st_bbox(rough_uk)[c("xmin", "ymin")],
n = c(50, 50),
crs = 4326,
what = "polygons",
square = TRUE,
flat_topped = FALSE) %>% st_sf() %>% mutate(id = 1:nrow(.))
for (i in 1:nrow(uk_grid)) {
message(glue("Downloading {[i]}"))
temp_data <- opq(bbox = uk_grid[i,]) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines
if ('name' %in% names(temp_data)) {} else {temp_data <- mutate(temp_data, name = NA)}
temp_data <- temp_data %>%
select(name, geometry) %>%
filter(grepl('north|south',name))
if (nrow(temp_data) > 1) {
temp_data$geometry <- st_centroid(temp_data$geometry)
if (i == 1) {result <- temp_data} else { result <- bind_rows(result, temp_data) }
}
}
library(osmdata)
library(sf)
library(tidyverse)
library(glue)
library(rnaturalearth)
regions <- read.csv('https://gist.githubusercontent.com/radiac/d91d2ed1b971c03d49e9b7bd85e23f1c/raw/1e51ebb467b809ea8dcf1d7d429581e95ac48e3d/uk-counties-to-regions.csv') %>%
rename_all(tolower)
rough_uk <- ne_countries(country = 'united kingdom', returnclass = 'sf')
uk_grid <- st_make_grid(rough_uk,
cellsize = c(diff(st_bbox(rough_uk)[c(1, 3)]), diff(st_bbox(rough_uk)[c(2, 4)]))/c(50,50),
offset = st_bbox(rough_uk)[c("xmin", "ymin")],
n = c(50, 50),
crs = 4326,
what = "polygons",
square = TRUE,
flat_topped = FALSE) %>% st_sf() %>% mutate(id = 1:nrow(.))
1:nrow(uk_grid)
i=1
message(glue("Downloading {[i]}"))
message(glue("Downloading {i}"))
library(osmdata)
library(sf)
library(tidyverse)
library(glue)
library(rnaturalearth)
regions <- read.csv('https://gist.githubusercontent.com/radiac/d91d2ed1b971c03d49e9b7bd85e23f1c/raw/1e51ebb467b809ea8dcf1d7d429581e95ac48e3d/uk-counties-to-regions.csv') %>%
rename_all(tolower)
rough_uk <- ne_countries(country = 'united kingdom', returnclass = 'sf')
uk_grid <- st_make_grid(rough_uk,
cellsize = c(diff(st_bbox(rough_uk)[c(1, 3)]), diff(st_bbox(rough_uk)[c(2, 4)]))/c(50,50),
offset = st_bbox(rough_uk)[c("xmin", "ymin")],
n = c(50, 50),
crs = 4326,
what = "polygons",
square = TRUE,
flat_topped = FALSE) %>% st_sf() %>% mutate(id = 1:nrow(.))
for (i in 1:nrow(uk_grid)) {
message(glue("Downloading {i}"))
temp_data <- opq(bbox = uk_grid[i,]) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines
if ('name' %in% names(temp_data)) {} else {temp_data <- mutate(temp_data, name = NA)}
temp_data <- temp_data %>%
select(name, geometry) %>%
filter(grepl('north|south',name))
if (nrow(temp_data) > 1) {
temp_data$geometry <- st_centroid(temp_data$geometry)
if (i == 1) {result <- temp_data} else { result <- bind_rows(result, temp_data) }
}
}
i
message(glue("Downloading {i}"))
temp_data <- opq(bbox = uk_grid[i,]) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines
temp_data
nrow(temp_data)
(temp_data == NULL)
is.null(temp_data)
library(osmdata)
library(sf)
library(tidyverse)
library(glue)
library(rnaturalearth)
regions <- read.csv('https://gist.githubusercontent.com/radiac/d91d2ed1b971c03d49e9b7bd85e23f1c/raw/1e51ebb467b809ea8dcf1d7d429581e95ac48e3d/uk-counties-to-regions.csv') %>%
rename_all(tolower)
rough_uk <- ne_countries(country = 'united kingdom', returnclass = 'sf')
uk_grid <- st_make_grid(rough_uk,
cellsize = c(diff(st_bbox(rough_uk)[c(1, 3)]), diff(st_bbox(rough_uk)[c(2, 4)]))/c(50,50),
offset = st_bbox(rough_uk)[c("xmin", "ymin")],
n = c(50, 50),
crs = 4326,
what = "polygons",
square = TRUE,
flat_topped = FALSE) %>% st_sf() %>% mutate(id = 1:nrow(.))
for (i in 1:nrow(uk_grid)) {
message(glue("Downloading {i}"))
temp_data <- opq(bbox = uk_grid[i,]) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines
if (!is.null(temp_data)) {
if ('name' %in% names(temp_data)) {} else {temp_data <- mutate(temp_data, name = NA)}
temp_data <- temp_data %>%
select(name, geometry) %>%
filter(grepl('north|south',name))
if (nrow(temp_data) > 1) {
temp_data$geometry <- st_centroid(temp_data$geometry)
if (i == 1) {result <- temp_data} else { result <- bind_rows(result, temp_data) }
}
}
}
i
message(glue("Downloading {i}"))
temp_data <- opq(bbox = uk_grid[i,]) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines
temp_data
if ('name' %in% names(temp_data)) {} else {temp_data <- mutate(temp_data, name = NA)}
names(temp_data)
if ('name' %in% names(temp_data)) {} else {temp_data <- mutate(temp_data, name = NA)}
('name' %in% names(temp_data))
if ('name' %in% names(temp_data)) {message('name already exists')} else {temp_data <- mutate(temp_data, name = NA)}
temp_data %>%
select(name, geometry)
temp_data %>%
select(name, geometry) %>%
filter(grepl('north|south',name))
temp_data <- temp_data %>%
select(name, geometry) %>%
filter(grepl('north|south',name))
nrow(temp_data)
temp_data$geometry <- st_centroid(temp_data$geometry)
result <- bind_rows(result, temp_data)
exists('result')
library(osmdata)
library(sf)
library(tidyverse)
library(glue)
library(rnaturalearth)
regions <- read.csv('https://gist.githubusercontent.com/radiac/d91d2ed1b971c03d49e9b7bd85e23f1c/raw/1e51ebb467b809ea8dcf1d7d429581e95ac48e3d/uk-counties-to-regions.csv') %>%
rename_all(tolower)
rough_uk <- ne_countries(country = 'united kingdom', returnclass = 'sf')
uk_grid <- st_make_grid(rough_uk,
cellsize = c(diff(st_bbox(rough_uk)[c(1, 3)]), diff(st_bbox(rough_uk)[c(2, 4)]))/c(50,50),
offset = st_bbox(rough_uk)[c("xmin", "ymin")],
n = c(50, 50),
crs = 4326,
what = "polygons",
square = TRUE,
flat_topped = FALSE) %>% st_sf() %>% mutate(id = 1:nrow(.))
i=1
message(glue("Downloading {i}"))
temp_data <- opq(bbox = uk_grid[i,]) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines
(!is.null(temp_data))
if (!is.null(temp_data)) {
if ('name' %in% names(temp_data)) {message('name already exists')} else {temp_data <- mutate(temp_data, name = NA)}
temp_data <- temp_data %>%
select(name, geometry) %>%
filter(grepl('north|south',name))
if (nrow(temp_data) > 1) {
temp_data$geometry <- st_centroid(temp_data$geometry)
if (exists('result')) {result <- temp_data} else { result <- bind_rows(result, temp_data) }
}
}
library(osmdata)
library(sf)
library(tidyverse)
library(glue)
library(rnaturalearth)
regions <- read.csv('https://gist.githubusercontent.com/radiac/d91d2ed1b971c03d49e9b7bd85e23f1c/raw/1e51ebb467b809ea8dcf1d7d429581e95ac48e3d/uk-counties-to-regions.csv') %>%
rename_all(tolower)
rough_uk <- ne_countries(country = 'united kingdom', returnclass = 'sf')
uk_grid <- st_make_grid(rough_uk,
cellsize = c(diff(st_bbox(rough_uk)[c(1, 3)]), diff(st_bbox(rough_uk)[c(2, 4)]))/c(50,50),
offset = st_bbox(rough_uk)[c("xmin", "ymin")],
n = c(50, 50),
crs = 4326,
what = "polygons",
square = TRUE,
flat_topped = FALSE) %>% st_sf() %>% mutate(id = 1:nrow(.))
i=1
message(glue("Downloading {i}"))
temp_data <- opq(bbox = uk_grid[i,]) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines
temp_data
(!is.null(temp_data))
if ('name' %in% names(temp_data)) {message('name already exists')} else {temp_data <- mutate(temp_data, name = NA)}
temp_data <- temp_data %>%
select(name, geometry) %>%
filter(grepl('north|south',name))
temp_data
library(osmdata)
library(sf)
library(tidyverse)
library(glue)
library(rnaturalearth)
regions <- read.csv('https://gist.githubusercontent.com/radiac/d91d2ed1b971c03d49e9b7bd85e23f1c/raw/1e51ebb467b809ea8dcf1d7d429581e95ac48e3d/uk-counties-to-regions.csv') %>%
rename_all(tolower)
rough_uk <- ne_countries(country = 'united kingdom', returnclass = 'sf')
uk_grid <- st_make_grid(rough_uk,
cellsize = c(diff(st_bbox(rough_uk)[c(1, 3)]), diff(st_bbox(rough_uk)[c(2, 4)]))/c(50,50),
offset = st_bbox(rough_uk)[c("xmin", "ymin")],
n = c(50, 50),
crs = 4326,
what = "polygons",
square = TRUE,
flat_topped = FALSE) %>% st_sf() %>% mutate(id = 1:nrow(.))
for (i in 1:nrow(uk_grid)) {
message(glue("Downloading {i}"))
temp_data <- opq(bbox = uk_grid[i,]) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines
if (!is.null(temp_data)) {
if ('name' %in% names(temp_data)) {message('name already exists')} else {temp_data <- mutate(temp_data, name = NA)}
temp_data <- temp_data %>%
select(name, geometry) %>%
filter(grepl('north|south',name))
message(glue("There are {nrow(temp_data)} rows of north or south streets"))
if (nrow(temp_data) > 1) {
temp_data$geometry <- st_centroid(temp_data$geometry)
if (exists('result')) {result <- temp_data} else { result <- bind_rows(result, temp_data) }
}
}
}
library(osmdata)
library(sf)
library(tidyverse)
library(glue)
library(rnaturalearth)
regions <- read.csv('https://gist.githubusercontent.com/radiac/d91d2ed1b971c03d49e9b7bd85e23f1c/raw/1e51ebb467b809ea8dcf1d7d429581e95ac48e3d/uk-counties-to-regions.csv') %>%
rename_all(tolower)
rough_uk <- ne_countries(country = 'united kingdom', returnclass = 'sf')
uk_grid <- st_make_grid(rough_uk,
cellsize = c(diff(st_bbox(rough_uk)[c(1, 3)]), diff(st_bbox(rough_uk)[c(2, 4)]))/c(50,50),
offset = st_bbox(rough_uk)[c("xmin", "ymin")],
n = c(50, 50),
crs = 4326,
what = "polygons",
square = TRUE,
flat_topped = FALSE) %>% st_sf() %>% mutate(id = 1:nrow(.))
for (i in 1:nrow(uk_grid)) {
message(glue("Downloading {i}"))
temp_data <- opq(bbox = uk_grid[i,]) %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf() %>%
.$osm_lines
if (!is.null(temp_data)) {
if ('name' %in% names(temp_data)) {message('name already exists')} else {temp_data <- mutate(temp_data, name = NA)}
temp_data <- temp_data %>%
select(name, geometry) %>%
filter(grepl('north|south',name))
message(glue("There are {nrow(temp_data)} rows of north or south streets"))
if (nrow(temp_data) > 1) {
temp_data$geometry <- st_centroid(temp_data$geometry)
if (!exists('result')) {result <- temp_data} else { result <- bind_rows(result, temp_data) }
}
}
}
warnings()
result
ggplot() + geom_sf(data=result)
library(sf)
places <- st_read('ne_50m_populated_places/ne_50m_populated_places.shp')
ggplot() + geom_sf(data=places)
msoa_geo <- st_read('Middle_Layer_Super_Output_Areas__December_2001__Boundaries-shp/Middle_Layer_Super_Output_Areas__December_2001__Boundaries.shp')
msoa_names <- read_csv('MSOA-Names-1.6.0.csv')
nrow(msoa_names)
msoa <- left_join(msoa_geo, msoa_names)
head(msoa_geo)
head(msoa_names)
msoa <- left_join(msoa_geo, msoa_names by c("msoa01cd" = "msoa11cd"))
msoa <- left_join(msoa_geo, msoa_names by = c("msoa01cd" = "msoa11cd"))
msoa <- left_join(msoa_geo, msoa_names, by = c("msoa01cd" = "msoa11cd"))
head(msoa)
msoa_names
msoa <- left_join(msoa_geo, msoa_names, by = c("msoa01cd" = "msoa11cd")) %>%
select(msoa11hclnm)
head(msoa)
msoa <- left_join(msoa_geo, msoa_names, by = c("msoa01cd" = "msoa11cd")) %>%
select(msoa11hclnm) %>%
mutate(name_length = nchar(msoa11hclnm))
head(msoa)
msoa <- left_join(msoa_geo, msoa_names, by = c("msoa01cd" = "msoa11cd")) %>%
select(msoa11hclnm) %>%
mutate(name_length = nchar(msoa11hclnm)) %>%
select(-msoa11hclnm)
msoa <- left_join(msoa_geo, msoa_names, by = c("msoa01cd" = "msoa11cd")) %>%
select(msoa11hclnm) %>%
mutate(name_length = nchar(msoa11hclnm)) %>%
select(-msoa11hclnm) %>%
mutate(geometry = st_centroid(geoemtry))
msoa <- left_join(msoa_geo, msoa_names, by = c("msoa01cd" = "msoa11cd")) %>%
select(msoa11hclnm) %>%
mutate(name_length = nchar(msoa11hclnm)) %>%
select(-msoa11hclnm) %>%
mutate(geometry = st_centroid(geometry))
st_write(msoa, 'msoa_names_centroids.geojson')
