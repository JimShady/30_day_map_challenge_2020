devtools::install_github("tylermorganwall/rayshader")
.libPaths()
data              <- raster('merged.tif')
library(rayshader)
library(raster)
library(tidyverse)
library(sf)
library(gdalUtils)
library(rgdal)
data              <- raster('merged.tif')
raster::crs(data) <- "+init=epsg:27700"
sample            <- raster_to_matrix(data)
sample %>%
sphere_shade(texture = "desert") %>%
add_shadow(ray_shade(sample, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(sample), 0) %>%
plot_3d(sample, zscale = 10, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
Sys.sleep(0.2)
render_snapshot()
sample %>%
sphere_shade(texture = "desert") %>%
add_shadow(ray_shade(sample, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(sample), 0) %>%
plot_3d(sample, zscale = 10, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
one              <- raster('rasters/sp7659_DSM_2M.asc')
raster::crs(one) <- "+init=epsg:27700"
one            <- raster_to_matrix(one)
one %>%
sphere_shade(texture = "desert")
one
one %>%
sphere_shade(texture = "desert") %>%
add_shadow(ray_shade(sample, zscale = 3), 0.5)
one %>%
sphere_shade(texture = "desert") %>%
add_shadow(ray_shade(sample, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(sample), 0) %>%
plot_map()
one %>%
sphere_shade(texture = "desert") %>%
add_shadow(ray_shade(one, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(one), 0) %>%
plot_map()
one %>%
sphere_shade(texture = "desert") %>%
add_shadow(ray_shade(one, zscale = 10), 0.5) %>%
add_shadow(ambient_shade(one), 0) %>%
plot_map()
one %>%
sphere_shade(texture = "desert") %>%
add_shadow(ray_shade(one, zscale = 1), 0.5) %>%
add_shadow(ambient_shade(one), 0) %>%
plot_map()
one
one * 10
one*10 %>%
sphere_shade(texture = "desert") %>%
add_shadow(ray_shade(one*10, zscale = 1), 0.5) %>%
add_shadow(ambient_shade(one*10), 0) %>%
plot_map()
one <- one*10
one %>%
sphere_shade(texture = "desert") %>%
add_shadow(ray_shade(one, zscale = 1), 0.5) %>%
add_shadow(ambient_shade(one), 0) %>%
plot_map()
one <- one*10
one %>%
sphere_shade(texture = "desert") %>%
add_shadow(ray_shade(one, zscale = 1), 0.5) %>%
add_shadow(ambient_shade(one), 0) %>%
plot_map()
one %>%
sphere_shade(texture = "desert") %>%
add_shadow(ray_shade(one, zscale = 1), 0.5) %>%
add_shadow(ambient_shade(one), 0) %>%
plot_3d(one, zscale = 10, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
one <- one/10
one <- one/10
one %>%
sphere_shade(texture = "desert") %>%
add_shadow(ray_shade(one, zscale = 1), 0.5) %>%
add_shadow(ambient_shade(one), 0) %>%
plot_3d(one, zscale = 10, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
one <- one*10
one %>%
sphere_shade(texture = "desert") %>%
add_shadow(ray_shade(one, zscale = 1), 0.5) %>%
add_shadow(ambient_shade(one), 0) %>%
plot_3d(one, zscale = 10, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
one %>%
sphere_shade(texture = "desert") %>%
add_shadow(ray_shade(one, zscale = 1), 0.5) %>%
add_shadow(ambient_shade(one), 0) %>%
plot_3d(one, zscale = 10, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
render_snapshot()
one %>%
sphere_shade() %>%
add_shadow(ray_shade(one, zscale = 1), 0.5) %>%
add_shadow(ambient_shade(one), 0) %>%
plot_3d(one, zscale = 10, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
one %>%
sphere_shade() %>%
add_shadow(ray_shade(one, zscale = 1), 0.5) %>%
add_shadow(ambient_shade(one), 0) %>%
plot_3d(one, zscale = 10, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800)) %>%
add_water(detect_water(one), color = "desert") %>%
Sys.sleep(0.2)
one %>%
sphere_shade() %>%
add_water(detect_water(one)) %>%
add_shadow(ray_shade(one, zscale = 1), 0.5) %>%
add_shadow(ambient_shade(one), 0) %>%
plot_3d(one, zscale = 10, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
mean(one)
mean(one, na.m=T)
one
one %>%
sphere_shade() %>%
add_water(detect_water(one)) %>%
add_shadow(ray_shade(one, zscale = 1), 0.5) %>%
add_shadow(ambient_shade(one), 0) %>%
plot_3d(one, zscale = 10, fov = 0, theta = 135,
zoom = 0.75, phi = 45, windowsize = c(1000, 800),
watercolor = "lightblue", waterlinecolor = "white")
one[is.na(one)]
one[is.na(one)] <- 0
one
one %>%
sphere_shade() %>%
add_water(detect_water(one)) %>%
add_shadow(ray_shade(one, zscale = 1), 0.5) %>%
add_shadow(ambient_shade(one), 0) %>%
plot_3d(one, zscale = 10, fov = 0, theta = 135,
zoom = 0.75, phi = 45, windowsize = c(1000, 800),
watercolor = "lightblue", waterlinecolor = "white")
one
#
raster_list         <- list.files('rasters/', pattern='.asc$', full.names = T)
gdalbuildvrt(gdalfile = raster_list, # uses all tiffs in the current folder
output.vrt = "rasters/temp.vrt")
gdal_translate(src_dataset = "rasters/temp.vrt",
dst_dataset = "merged.tif",
output_Raster = TRUE,
options = c("BIGTIFF=YES", "COMPRESSION=LZW"))
data              <- raster('merged.tif')
raster::crs(data) <- "+init=epsg:27700"
data
data              <- aggregate(data, fact=10 )
data
data             <- raster_to_matrix(data)
data %>%
sphere_shade(texture = "desert") %>%
add_shadow(ray_shade(data, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(data), 0) %>%
plot_map()
data %>%
sphere_shade(texture = "desert") %>%
add_shadow(ray_shade(data, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(data), 0) %>%
plot_3d(data, zscale = 10, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
get_arcgis_map_image <- function(bbox, map_type = "World_Street_Map", file = NULL,
width = 400, height = 400, sr_bbox = 4326) {
require(httr)
require(glue)
require(jsonlite)
url <- parse_url("https://utility.arcgisonline.com/arcgis/rest/services/Utilities/PrintingTools/GPServer/Export%20Web%20Map%20Task/execute")
# define JSON query parameter
web_map_param <- list(
baseMap = list(
baseMapLayers = list(
list(url = jsonlite::unbox(glue("https://services.arcgisonline.com/ArcGIS/rest/services/{map_type}/MapServer",
map_type = map_type)))
)
),
exportOptions = list(
outputSize = c(width, height)
),
mapOptions = list(
extent = list(
spatialReference = list(wkid = jsonlite::unbox(sr_bbox)),
xmax = jsonlite::unbox(max(bbox$p1$long, bbox$p2$long)),
xmin = jsonlite::unbox(min(bbox$p1$long, bbox$p2$long)),
ymax = jsonlite::unbox(max(bbox$p1$lat, bbox$p2$lat)),
ymin = jsonlite::unbox(min(bbox$p1$lat, bbox$p2$lat))
)
)
)
res <- GET(
url,
query = list(
f = "json",
Format = "PNG32",
Layout_Template = "MAP_ONLY",
Web_Map_as_JSON = jsonlite::toJSON(web_map_param))
)
if (status_code(res) == 200) {
body <- content(res, type = "application/json")
message(jsonlite::toJSON(body, auto_unbox = TRUE, pretty = TRUE))
if (is.null(file))
file <- tempfile("overlay_img", fileext = ".png")
img_res <- GET(body$results[[1]]$value$url)
img_bin <- content(img_res, "raw")
writeBin(img_bin, file)
message(paste("image saved to file:", file))
} else {
message(res)
}
invisible(file)
}
define_image_size <- function(bbox, major_dim = 400) {
# calculate aspect ration (width/height) from lat/long bounding box
aspect_ratio <- abs((bbox$p1$long - bbox$p2$long) / (bbox$p1$lat - bbox$p2$lat))
# define dimensions
img_width <- ifelse(aspect_ratio > 1, major_dim, major_dim*aspect_ratio) %>% round()
img_height <- ifelse(aspect_ratio < 1, major_dim, major_dim/aspect_ratio) %>% round()
size_str <- paste(img_width, img_height, sep = ",")
list(height = img_height, width = img_width, size = size_str)
}
list(
p1 = list(long = -122.522, lat = 37.707),
p2 = list(long = -122.354, lat = 37.84)
)
extent(sample)
overlay_image <-
slippy_overlay(
one,
image_source = "stamen",
image_type = "watercolor",
png_opacity = 0.3
)
install.packages("geoviz")
library(geoviz)
overlay_image <-
slippy_overlay(
one,
image_source = "stamen",
image_type = "watercolor",
png_opacity = 0.3
)
one
data              <- raster('merged.tif')
raster::crs(data) <- "+init=epsg:27700"
data              <- aggregate(data, fact=10)
# EPSG strings
latlong = "+init=epsg:4326"
ukgrid = "+init=epsg:27700"
google = "+init=epsg:3857"
raster::crs(data) <- ukgrid
data              <- raster::projectRaster(data, crs=latlong)
data
plot(data)
overlay_image <-
slippy_overlay(
data,
image_source = "stamen",
image_type = "watercolor",
png_opacity = 0.3
)
warnings()
data             <- raster_to_matrix(data)
data %>%
sphere_shade(texture = "bw") %>%
add_overlay(overlay_image)
library(magick)
install.packages("magick")
library(magick)
data %>%
sphere_shade(texture = "bw") %>%
add_overlay(overlay_image)
data %>%
sphere_shade(texture = "bw") %>%
add_overlay(overlay_image) %>%
plot_map()
data %>%
sphere_shade(texture = "bw") %>%
add_overlay(overlay_image) %>%
plot_3d()
data %>%
sphere_shade(texture = "bw") %>%
add_overlay(overlay_image) %>%
plot_3d(data)
data %>%
sphere_shade(texture = "bw") %>%
add_overlay(overlay_image) %>%
plot_3d(data, zscale = 10, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
data %>%
sphere_shade(texture = "desert") %>%
add_shadow(ray_shade(data, zscale = 3), 0.5) %>%
add_shadow(ambient_shade(data), 0) %>%
plot_3d(data, zscale = 3, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
data %>%
sphere_shade(texture = "bw") %>%
add_overlay(overlay_image) %>%
plot_3d(data, zscale = 3, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
data %>%
sphere_shade(texture = "bw") %>%
add_overlay(overlay_image) %>%
plot_3d(data, zscale = 3, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
filename_movie = 'northants'
data %>%
sphere_shade(texture = "bw") %>%
add_overlay(overlay_image) %>%
plot_3d(data, zscale = 3, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
render_movie(filename = filename_movie)
data %>%
sphere_shade(texture = "bw") %>%
add_overlay(overlay_image) %>%
plot_3d(data, zscale = 3, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))
render_movie(filename = filename_movie)
install.packages("av")
render_movie(filename = filename_movie)
